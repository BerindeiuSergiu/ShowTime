@page "/artists"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using ShowTime.BussinessLogic.Dtos
@using Microsoft.AspNetCore.Components.Forms
@inject IArtistsService ArtistService


@* newArtist!.Name ==> Null forgiving operator nu ma omoara daca e null *@


<h1>Add new artist</h1>
<div class="newArtist">
    <EditForm Model="newArtist" OnSubmit="AddArtist" FormName="addArtist">
        <label>Artist Name</label>
        <InputText @bind-Value="newArtist!.Name"></InputText>
        <label>Artist Genre</label>
        <InputText @bind-Value="newArtist!.Genre"></InputText>
        <label>Artist Image</label>
        <InputText @bind-Value="newArtist!.Image"></InputText>
        <button type="submit" class="btn btn-primary">Add Artist</button>
    </EditForm>
</div>

<div class="deleteArtist">
    <h3>Delete Artist</h3>
    <EditForm Model="deleteArtist" OnSubmit="DeleteArtist" FormName="deleteArtist">
        <label>Artist ID</label>
        <InputNumber @bind-Value="deleteArtist!.Id"></InputNumber>
        <button type="submit" class="btn btn-danger">Delete Artist</button>
    </EditForm>
</div>

<h3>Update Artist</h3>
<EditForm Model="updateArtist" OnSubmit="UpdateArtist" FormName="updateArtist">
    <label>Artist ID</label>
    <InputNumber @bind-Value="updateArtist!.Id"></InputNumber>
    <label>Artist Name</label>
    <InputText @bind-Value="updateArtist!.Name"></InputText>
    <label>Artist Genre</label>
    <InputText @bind-Value="updateArtist!.Genre"></InputText>
    <label>Artist Image</label>
    <InputText @bind-Value="updateArtist!.Image"></InputText>
    <button type="submit" class="btn btn-success">Update Artist</button>
</EditForm>

<h3>Artists</h3>
@if (artists.Count == 0)
{
    <p>No artists registered</p>
}
else
{
    <div class="artist-list">
        @foreach (var artist in artists)
        {
            <div class="artist-card">
                <img src="@artist.Image" alt="@artist.Name" class="artist-image" />
                <div class="artist-info">
                    <h3>@artist.Name</h3>
                    <p>@artist.Genre</p>
                </div>
            </div>
        }
    </div>
}

@code {
    private IList<ArtistGetDto> artists = new List<ArtistGetDto>();

    [SupplyParameterFromForm]
    private ArtistCreateDto? newArtist { get; set; }

    [SupplyParameterFromForm]
    private ArtistUpdateDto? updateArtist { get; set; }

    [SupplyParameterFromForm]
    private ArtistGetDto? deleteArtist { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // pentru primul load neaparat initializare sa nu fie null ca nu ii place la forms
        newArtist ??= new ArtistCreateDto();
        updateArtist ??= new ArtistUpdateDto();
        deleteArtist ??= new ArtistGetDto();

        artists = await ArtistService.GetAllArtistsAsync();
    }

    private async Task AddArtist()
    {
        if (newArtist != null)
        {
            await ArtistService.AddArtistAsync(newArtist);
            newArtist = new ArtistCreateDto();
            artists = await ArtistService.GetAllArtistsAsync();
        }
    }

    private async Task DeleteArtist()
    {
        if (deleteArtist != null)
        {
            await ArtistService.DeleteArtistAsync(deleteArtist.Id);
            deleteArtist = new ArtistGetDto();
            artists = await ArtistService.GetAllArtistsAsync();
        }
    }

    private async Task UpdateArtist()
    {
        if (updateArtist != null)
        {
            await ArtistService.UpdateArtistAsync(updateArtist);
            updateArtist = new ArtistUpdateDto();
            artists = await ArtistService.GetAllArtistsAsync();
        }
    }
}