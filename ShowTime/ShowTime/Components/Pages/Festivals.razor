@page "/festivals"
@using ShowTime.BusinessLogic.Abstractions
@using ShowTime.BusinessLogic.Dtos
@using ShowTime.BussinessLogic.Dtos
@using Microsoft.AspNetCore.Components.Forms
@inject IFestivalService FestivalService

<h3>Add new festival</h3>
<EditForm Model="newFestival" OnSubmit="AddFestival" FormName="AddFestivalForm">
    <div class="mb-3">
        <label class="form-label">Festival Name</label>
        <InputText @bind-Value="newFestival.Name" class="form-control"></InputText>
    </div>

    <div class="mb-3">
        <label class="form-label">Location</label>
        <InputText @bind-Value="newFestival.Location" class="form-control"></InputText>
    </div>

    <div class="mb-3">
        <label class="form-label">Start Date</label>
        <InputDate @bind-Value="newFestival.StartDate" class="form-control"></InputDate>
    </div>

    <div class="mb-3">
        <label class="form-label">End Date</label>
        <InputDate @bind-Value="newFestival.EndDate" class="form-control"></InputDate>
    </div>

    <div class="mb-3">
        <label class="form-label">Splash Art (Image URL)</label>
        <InputText @bind-Value="newFestival.SplashArt" class="form-control"></InputText>
    </div>

    <div class="mb-3">
        <label class="form-label">Capacity</label>
        <InputNumber @bind-Value="newFestival.Capacity" class="form-control"></InputNumber>
    </div>

    <button type="submit" class="btn btn-primary">Add Festival</button>
</EditForm>

<h3>Festivals</h3>
@if (festivals.Count == 0)
{
    <p>No festivals registered</p>
}
else
{
    <div class="festival-list">
        @foreach (var festival in festivals)
        {
            <div class="festival-card card mb-3">
                @if (!string.IsNullOrEmpty(festival.SplashArt))
                {
                    <img src="@festival.SplashArt" alt="@festival.Name" class="card-img-top festival-image" style="height: 200px; object-fit: cover;" />
                }
                <div class="card-body festival-info">
                    <h3 class="card-title">@festival.Name</h3>
                    <p class="card-text">
                        <strong>Location:</strong> @festival.Location
                    </p>
                    <p class="card-text">
                        <strong>Start Date:</strong> @festival.StartDate.ToString("MMM dd, yyyy")
                    </p>
                    <p class="card-text">
                        <strong>End Date:</strong> @festival.EndDate.ToString("MMM dd, yyyy")
                    </p>
                    @if (festival.Capacity > 0)
                    {
                        <p class="card-text">
                            <strong>Capacity:</strong> @festival.Capacity.ToString("N0")
                        </p>
                    }
                    <p class="card-text">
                        <small class="text-muted">Festival ID: @festival.Id</small>
                    </p>
                </div>
            </div>
        }
    </div>
}

@code {
    private IList<FestivalGetDto> festivals = new List<FestivalGetDto>();
    [SupplyParameterFromForm]
    private FestivalCreateDto newFestival { get; set; } = new();

    // practic de fiecare data cand pagina se deschide astea trebuie sa apara
    protected override async Task OnInitializedAsync()
    {
        festivals = await FestivalService.GetAllFestivalsAsync();
    }

    private async Task AddFestival()
    {
        await FestivalService.AddFestivalAsync(newFestival);
        newFestival = new FestivalCreateDto();
        festivals = await FestivalService.GetAllFestivalsAsync();
    }
}